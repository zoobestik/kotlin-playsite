name: "Tests: release bundle"
on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  integration:
    name: Run end-to-end tests
    runs-on: ubuntu-latest
    timeout-minutes: 25

    env:
      # Slow agent for github actions
      TEST_LOWRES_AGENT: 'true'

      # Set .env.example
      NEXT_PUBLIC_SEARCH_ALGOLIA_ID: ${{ secrets.TEST_PUBLIC_SEARCH_ALGOLIA_ID }}
      NEXT_PUBLIC_SEARCH_ALGOLIA_API_KEY: ${{ secrets.TEST_PUBLIC_SEARCH_ALGOLIA_API_KEY }}
      NEXT_PUBLIC_SEARCH_ALGOLIA_INDEX_NAME: ${{ secrets.TEST_PUBLIC_SEARCH_ALGOLIA_INDEX_NAME }}

    steps:
      # prepare core binaries
      - uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      # playwright recommends if you cache the binaries to keep it tied to the version of playwright you are using.
      # https://playwright.dev/docs/ci#caching-browsers
      - name: Get current Playwright version
        id: playwright-version
        run: |
          echo version=$(npm info @playwright/test version) >> $GITHUB_OUTPUT

      - name: Cache Playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-${{ runner.arch }}-cache-playwright-${{ steps.playwright-version.outputs.version }}

      - name: Playwright info
        run: |
          echo "OS: ${{ matrix.os }}"
          echo "Playwright version: ${{ steps.playwright-version.outputs.version }}"
          echo "Playwright install dir: ~/.cache/ms-playwright"
          echo "Cache key: ${{ runner.os }}-${{ runner.arch }}-cache-playwright-${{ steps.playwright-version.outputs.version }}"
          echo "Cache hit: ${{ steps.playwright-cache.outputs.cache-hit == 'true' }}"

      - name: Install Playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      # run tests
      - name: Run tests
        run: npm run test:release

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-report
          path: |
            test-results/
            playwright-report/
          retention-days: 5
